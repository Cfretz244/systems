PYTHON(1)                                                            PYTHON(1)



NNAAMMEE
       python  - an interpreted, interactive, object-oriented programming lan-
       guage

SSYYNNOOPPSSIISS
       ppyytthhoonn [ --BB ] [ --dd ] [ --EE ] [ --hh ] [ --ii ] [ --mm _m_o_d_u_l_e_-_n_a_m_e ]
              [ --OO ] [ --OO00 ] [ --RR ] [ --QQ _a_r_g_u_m_e_n_t ] [ --ss ] [ --SS ] [ --tt ] [  --uu
       ]
              [ --vv ] [ --VV ] [ --WW _a_r_g_u_m_e_n_t ] [ --xx ] [ --33 ] [ --??  ]
              [ --cc _c_o_m_m_a_n_d | _s_c_r_i_p_t | - ] [ _a_r_g_u_m_e_n_t_s ]

DDEESSCCRRIIPPTTIIOONN
       Python is an interpreted, interactive, object-oriented programming lan-
       guage that combines remarkable power with very clear  syntax.   For  an
       introduction  to  programming  in Python you are referred to the Python
       Tutorial.  The Python Library Reference documents built-in and standard
       types, constants, functions and modules.  Finally, the Python Reference
       Manual describes the syntax and semantics of the core language in (per-
       haps  too) much detail.  (These documents may be located via the IINNTTEERR--
       NNEETT RREESSOOUURRCCEESS below; they may be installed on your system as well.)

       Python’s basic power can be extended with your own modules written in C
       or  C++.   On  most  systems  such  modules  may be dynamically loaded.
       Python is also adaptable as an extension language for existing applica-
       tions.  See the internal documentation for hints.

       Documentation  for  installed Python modules and packages can be viewed
       by running the ppyyddoocc program.

CCOOMMMMAANNDD LLIINNEE OOPPTTIIOONNSS
       --BB     Don’t write _._p_y_[_c_o_] files on import. See  also  PYTHONDONTWRITE-
              BYTECODE.

       --cc _c_o_m_m_a_n_d
              Specify  the command to execute (see next section).  This termi-
              nates the option list (following options are passed as arguments
              to the command).

       --dd     Turn  on parser debugging output (for wizards only, depending on
              compilation options).

       --EE     Ignore environment variables like PYTHONPATH and PYTHONHOME that
              modify the behavior of the interpreter.

       --hh ,,  --?? ,,  ----hheellpp
              Prints the usage for the interpreter executable and exits.

       --ii     When  a  script  is passed as first argument or the --cc option is
              used, enter interactive mode after executing the script  or  the
              command.  It does not read the $PYTHONSTARTUP file.  This can be
              useful to inspect global variables  or  a  stack  trace  when  a
              script raises an exception.

       --mm _m_o_d_u_l_e_-_n_a_m_e
              Searches  _s_y_s_._p_a_t_h for the named module and runs the correspond-
              ing _._p_y file as a script.

       --OO     Turn on basic optimizations.  This changes the  filename  exten-
              sion  for  compiled  (bytecode)  files from _._p_y_c to _._p_y_o.  Given
              twice, causes docstrings to be discarded.

       --OO00    Discard docstrings in addition to the --OO optimizations.

       --RR     Turn on "hash randomization", so that the hash() values of  str,
              unicode, buffer and datetime objects are "salted" with an unpre-
              dictable pseudo-random  value.  Although  they  remain  constant
              within  an  individual  Python process, they are not predictable
              between repeated invocations of Python.

              This is intended to provide protection against a denial of  ser-
              vice  caused  by  carefully-chosen inputs that exploit the worst
              case performance of a dict construction, O(n^2) complexity.  See
              http://www.ocert.org/advisories/ocert-2011-003.html for details.

       --QQ _a_r_g_u_m_e_n_t
              Division control; see PEP 238.  The  argument  must  be  one  of
              "old"  (the  default,  int/int  and  long/long  return an int or
              long), "new" (new division semantics, i.e. int/int and long/long
              returns  a float), "warn" (old division semantics with a warning
              for int/int and long/long), or "warnall" (old division semantics
              with a warning for all use of the division operator).  For a use
              of "warnall", see the Tools/scripts/fixdiv.py script.

       --ss     Don’t add user site directory to sys.path.

       --SS     Disable the import of the module  _s_i_t_e  and  the  site-dependent
              manipulations of _s_y_s_._p_a_t_h that it entails.

       --tt     Issue  a  warning  when  a source file mixes tabs and spaces for
              indentation in a way that makes it depend on the worth of a  tab
              expressed  in  spaces.   Issue an error when the option is given
              twice.

       --uu     Force stdin, stdout and stderr to  be  totally  unbuffered.   On
              systems  where  it matters, also put stdin, stdout and stderr in
              binary mode.  Note that there is internal  buffering  in  xread-
              lines(),  readlines()  and  file-object  iterators ("for line in
              sys.stdin") which is not influenced by  this  option.   To  work
              around  this, you will want to use "sys.stdin.readline()" inside
              a "while 1:" loop.

       --vv     Print a message each time a module is initialized,  showing  the
              place  (filename  or  built-in  module) from which it is loaded.
              When given twice, print a message for each file that is  checked
              for  when  searching for a module.  Also provides information on
              module cleanup at exit.

       --VV ,,  ----vveerrssiioonn
              Prints the Python version number of the executable and exits.

       --WW _a_r_g_u_m_e_n_t
              Warning control.  Python sometimes  prints  warning  message  to
              _s_y_s_._s_t_d_e_r_r.   A  typical warning message has the following form:
              _f_i_l_e::_l_i_n_e:: _c_a_t_e_g_o_r_y::  _m_e_s_s_a_g_e_.   By  default,  each  warning  is
              printed  once for each source line where it occurs.  This option
              controls how often warnings are printed.   Multiple  --WW  options
              may  be  given; when a warning matches more than one option, the
              action for the last matching option is  performed.   Invalid  --WW
              options  are ignored (a warning message is printed about invalid
              options when the first warning is issued).  Warnings can also be
              controlled  from within a Python program using the _w_a_r_n_i_n_g_s mod-
              ule.

              The simplest form of _a_r_g_u_m_e_n_t is one  of  the  following  _a_c_t_i_o_n
              strings  (or  a unique abbreviation): iiggnnoorree to ignore all warn-
              ings; ddeeffaauulltt to explicitly request the default behavior (print-
              ing  each  warning once per source line); aallll to print a warning
              each time it occurs (this may generate many messages if a  warn-
              ing  is  triggered  repeatedly for the same source line, such as
              inside a loop); mmoodduullee to print each warning only the first time
              it  occurs  in  each module; oonnccee to print each warning only the
              first time it occurs in the program; or eerrrroorr to raise an excep-
              tion instead of printing a warning message.

              The   full  form  of  _a_r_g_u_m_e_n_t  is  _a_c_t_i_o_n::_m_e_s_s_a_g_e::_c_a_t_e_g_o_r_y::_m_o_d_-
              _u_l_e::_l_i_n_e_.  Here, _a_c_t_i_o_n is as explained above but  only  applies
              to messages that match the remaining fields.  Empty fields match
              all values; trailing empty fields may be omitted.   The  _m_e_s_s_a_g_e
              field  matches  the  start  of the warning message printed; this
              match is case-insensitive.  The _c_a_t_e_g_o_r_y field matches the warn-
              ing category.  This must be a class name; the match test whether
              the actual warning category of the message is a subclass of  the
              specified  warning category.  The full class name must be given.
              The _m_o_d_u_l_e field matches the (fully-qualified) module name; this
              match  is  case-sensitive.  The _l_i_n_e field matches the line num-
              ber, where zero matches all line numbers and is thus  equivalent
              to an omitted line number.

       --xx     Skip  the  first line of the source.  This is intended for a DOS
              specific hack only.  Warning: the line numbers in error messages
              will be off by one!

       --33     Warn  about  Python 3.x incompatibilities that 2to3 cannot triv-
              ially fix.

IINNTTEERRPPRREETTEERR IINNTTEERRFFAACCEE
       The interpreter interface resembles that of the UNIX shell: when called
       with  standard input connected to a tty device, it prompts for commands
       and executes them until an EOF is read; when called with  a  file  name
       argument  or  with  a  file  as standard input, it reads and executes a
       _s_c_r_i_p_t from that file; when called with --cc  _c_o_m_m_a_n_d_,  it  executes  the
       Python  statement(s) given as _c_o_m_m_a_n_d_.  Here _c_o_m_m_a_n_d may contain multi-
       ple statements separated by newlines.  Leading whitespace  is  signifi-
       cant  in  Python statements!  In non-interactive mode, the entire input
       is parsed before it is executed.

       If available, the script name and additional arguments  thereafter  are
       passed  to the script in the Python variable _s_y_s_._a_r_g_v _, which is a list
       of strings (you must first _i_m_p_o_r_t _s_y_s to be able to access it).  If  no
       script  name  is  given, _s_y_s_._a_r_g_v_[_0_] is an empty string; if --cc is used,
       _s_y_s_._a_r_g_v_[_0_] contains the string _’_-_c_’_.  Note that options interpreted by
       the Python interpreter itself are not placed in _s_y_s_._a_r_g_v_.

       In  interactive  mode,  the  primary prompt is ‘>>>’; the second prompt
       (which appears when a command is not complete) is ‘...’.   The  prompts
       can  be  changed  by assignment to _s_y_s_._p_s_1 or _s_y_s_._p_s_2_.  The interpreter
       quits when it reads an EOF at a prompt.  When  an  unhandled  exception
       occurs,  a  stack  trace  is printed and control returns to the primary
       prompt; in non-interactive mode, the interpreter exits  after  printing
       the  stack  trace.   The  interrupt signal raises the _K_e_y_b_o_a_r_d_I_n_t_e_r_r_u_p_t
       exception; other UNIX signals are not caught (except  that  SIGPIPE  is
       sometimes  ignored, in favor of the _I_O_E_r_r_o_r exception).  Error messages
       are written to stderr.

FFIILLEESS AANNDD DDIIRREECCTTOORRIIEESS
       These are subject to difference depending on local installation conven-
       tions;  ${prefix}  and  ${exec_prefix}  are  installation-dependent and
       should be interpreted as for GNU software; they may be the  same.   The
       default for both is _/_u_s_r_/_l_o_c_a_l.

       _$_{_e_x_e_c___p_r_e_f_i_x_}_/_b_i_n_/_p_y_t_h_o_n
              Recommended location of the interpreter.

       _$_{_p_r_e_f_i_x_}_/_l_i_b_/_p_y_t_h_o_n_<_v_e_r_s_i_o_n_>
       _$_{_e_x_e_c___p_r_e_f_i_x_}_/_l_i_b_/_p_y_t_h_o_n_<_v_e_r_s_i_o_n_>
              Recommended locations of the directories containing the standard
              modules.

       _$_{_p_r_e_f_i_x_}_/_i_n_c_l_u_d_e_/_p_y_t_h_o_n_<_v_e_r_s_i_o_n_>
       _$_{_e_x_e_c___p_r_e_f_i_x_}_/_i_n_c_l_u_d_e_/_p_y_t_h_o_n_<_v_e_r_s_i_o_n_>
              Recommended locations of the directories containing the  include
              files  needed for developing Python extensions and embedding the
              interpreter.

       _~_/_._p_y_t_h_o_n_r_c_._p_y
              User-specific initialization file loaded by the _u_s_e_r module; not
              used by default or by most applications.

EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       PYTHONHOME
              Change  the  location  of  the  standard  Python  libraries.  By
              default, the libraries are searched in ${prefix}/lib/python<ver-
              sion>  and  ${exec_prefix}/lib/python<version>,  where ${prefix}
              and ${exec_prefix} are installation-dependent directories,  both
              defaulting  to  _/_u_s_r_/_l_o_c_a_l.  When $PYTHONHOME is set to a single
              directory, its value replaces both ${prefix} and ${exec_prefix}.
              To specify different values for these, set $PYTHONHOME to ${pre-
              fix}:${exec_prefix}.

       PYTHONPATH
              Augments the default search path for module files.   The  format
              is  the  same  as the shell’s $PATH: one or more directory path-
              names  separated  by  colons.   Non-existent   directories   are
              silently  ignored.   The  default  search  path  is installation
              dependent, but generally begins  with  ${prefix}/lib/python<ver-
              sion> (see PYTHONHOME above).  The default search path is always
              appended to $PYTHONPATH.  If a script  argument  is  given,  the
              directory containing the script is inserted in the path in front
              of $PYTHONPATH.  The search path can be manipulated from  within
              a Python program as the variable _s_y_s_._p_a_t_h _.

       PYTHONSTARTUP
              If  this  is the name of a readable file, the Python commands in
              that file are executed before the first prompt is  displayed  in
              interactive  mode.   The file is executed in the same name space
              where interactive commands are executed so that objects  defined
              or  imported  in  it  can  be  used without qualification in the
              interactive session.  You can also change  the  prompts  _s_y_s_._p_s_1
              and _s_y_s_._p_s_2 in this file.

       PYTHONY2K
              Set  this  to  a  non-empty  string  to cause the _t_i_m_e module to
              require dates specified as strings  to  include  4-digit  years,
              otherwise  2-digit  years are converted based on rules described
              in the _t_i_m_e module documentation.

       PYTHONOPTIMIZE
              If this is set to a non-empty string it is equivalent to  speci-
              fying  the  --OO option. If set to an integer, it is equivalent to
              specifying --OO multiple times.

       PYTHONDEBUG
              If this is set to a non-empty string it is equivalent to  speci-
              fying  the  --dd option. If set to an integer, it is equivalent to
              specifying --dd multiple times.

       PYTHONDONTWRITEBYTECODE
              If this is set to a non-empty string it is equivalent to  speci-
              fying the --BB option (don’t try to write _._p_y_[_c_o_] files).

       PYTHONINSPECT
              If  this is set to a non-empty string it is equivalent to speci-
              fying the --ii option.

       PYTHONNOUSERSITE
              If this is set to a non-empty string it is equivalent to  speci-
              fying  the  --ss  option  (Don’t  add  the  user site directory to
              sys.path).

       PYTHONUNBUFFERED
              If this is set to a non-empty string it is equivalent to  speci-
              fying the --uu option.

       PYTHONVERBOSE
              If  this is set to a non-empty string it is equivalent to speci-
              fying the --vv option. If set to an integer, it is  equivalent  to
              specifying --vv multiple times.

       PYTHONHASHSEED
              If  this  variable is set to "random", the effect is the same as
              specifying the --RR option: a random value is  used  to  seed  the
              hashes of str, unicode, buffer and datetime objects.

              If  PYTHONHASHSEED  is  set to an integer value, it is used as a
              fixed seed for generating the hash() of the types covered by the
              hash randomization.  Its purpose is to allow repeatable hashing,
              such as for selftests for the interpreter itself, or to allow  a
              cluster of python processes to share hash values.

              The   integer   must   be   a   decimal   number  in  the  range
              [0,4294967295].  Specifying the value 0 will lead  to  the  same
              hash values as when hash randomization is disabled.

AAUUTTHHOORR
       The Python Software Foundation: http://www.python.org/psf

IINNTTEERRNNEETT RREESSOOUURRCCEESS
       Main website:  http://www.python.org/
       Documentation:  http://docs.python.org/
       Developer resources:  http://www.python.org/dev/
       Downloads:  http://python.org/download/
       Module repository:  http://pypi.python.org/
       Newsgroups:  comp.lang.python, comp.lang.python.announce

LLIICCEENNSSIINNGG
       Python  is  distributed  under  an  Open  Source license.  See the file
       "LICENSE" in the Python source distribution for information on terms  &
       conditions  for  accessing  and  otherwise  using Python and for a DIS-
       CLAIMER OF ALL WARRANTIES.



             $Date: 2010-01-31 11:09:16 -0500 (Sun, 31 Jan 2010) $   PYTHON(1)
